/**************************************************************************************************
 Software License Agreement (BSD License)

 Copyright (c) 2011-2013, LAR toolkit developers - University of Aveiro - http://lars.mec.ua.pt
 All rights reserved.

 Redistribution and use in source and binary forms, with or without modification, are permitted
 provided that the following conditions are met:

  *Redistributions of source code must retain the above copyright notice, this list of
   conditions and the following disclaimer.
  *Redistributions in binary form must reproduce the above copyright notice, this list of
   conditions and the following disclaimer in the documentation and/or other materials provided
   with the distribution.
  *Neither the name of the University of Aveiro nor the names of its contributors may be used to
   endorse or promote products derived from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
***************************************************************************************************/
/**
 * @addtogroup mit_logs
 * @file 
 * @brief THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY BY HAND!!
 * Generated by LCM
 *@{
 **/
#include <stdint.h>
#include <stdlib.h>
#include "lcm_coretypes.h"

#ifndef _lcmtypes_velodyne_t_h
#define _lcmtypes_velodyne_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _lcmtypes_velodyne_t lcmtypes_velodyne_t;
struct _lcmtypes_velodyne_t
{
    int64_t    utime;
    int32_t    datalen;
    uint8_t    *data;
};
 
lcmtypes_velodyne_t   *lcmtypes_velodyne_t_copy(const lcmtypes_velodyne_t *p);
void lcmtypes_velodyne_t_destroy(lcmtypes_velodyne_t *p);

int  lcmtypes_velodyne_t_encode(void *buf, int offset, int maxlen, const lcmtypes_velodyne_t *p);
int  lcmtypes_velodyne_t_decode(const void *buf, int offset, int maxlen, lcmtypes_velodyne_t *p);
int  lcmtypes_velodyne_t_decode_cleanup(lcmtypes_velodyne_t *p);
int  lcmtypes_velodyne_t_encoded_size(const lcmtypes_velodyne_t *p);

// LCM support functions. Users should not call these
int64_t __lcmtypes_velodyne_t_get_hash(void);
int64_t __lcmtypes_velodyne_t_hash_recursive(const __lcm_hash_ptr *p);
int     __lcmtypes_velodyne_t_encode_array(void *buf, int offset, int maxlen, const lcmtypes_velodyne_t *p, int elements);
int     __lcmtypes_velodyne_t_decode_array(const void *buf, int offset, int maxlen, lcmtypes_velodyne_t *p, int elements);
int     __lcmtypes_velodyne_t_decode_array_cleanup(lcmtypes_velodyne_t *p, int elements);
int     __lcmtypes_velodyne_t_encoded_array_size(const lcmtypes_velodyne_t *p, int elements);
int     __lcmtypes_velodyne_t_clone_array(const lcmtypes_velodyne_t *p, lcmtypes_velodyne_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
